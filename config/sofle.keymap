/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };

    combos {
        compatible = "zmk,combos";

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <14 15>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <15 16>;
            layers = <0 2 3>;
        };

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <16 17>;
        };

        copy {
            bindings = <&kp LC(C)>;
            key-positions = <38 39>;
        };

        cut {
            bindings = <&kp LC(X)>;
            key-positions = <38 40>;
        };

        paste {
            bindings = <&kp LC(V)>;
            key-positions = <39 40>;
        };

        nwenter {
            bindings = <&numword ENTER>;
            key-positions = <15 16>;
            layers = <1>;
        };

        numenter {
            bindings = <&kp KP_ENTER>;
            key-positions = <28 40>;
        };

        numcomma {
            bindings = <&commaspace>;
            key-positions = <14 26>;
            layers = <1>;
        };

        ctrl-a {
            bindings = <&kp LC(A)>;
            key-positions = <24 25>;
        };

        alt-o {
            bindings = <&kp LA(O)>;
            key-positions = <25 26>;
        };

        pwdshortcut {
            bindings = <&kp LC(SEMICOLON)>;
            key-positions = <36 37>;
        };

        symbol {
            bindings = <&sl 3>;
            key-positions = <24 36>;
        };

        scrollup {
            bindings = <&msc SCRL_UP>;
            key-positions = <5 17>;
        };

        scrolldown {
            bindings = <&msc SCRL_DOWN>;
            key-positions = <29 41>;
        };
    };

    macros {
        plus_minus: plus_minus {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_NUMBER_1 &kp KP_NUMBER_7 &kp KP_NUMBER_7>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "PLUS_MINUS";
        };

        degree: degree {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_0 &kp KP_NUMBER_1 &kp KP_NUMBER_7 &kp KP_N6>,
                <&macro_press>,
                <&kp LEFT_ALT>;

            label = "DEGREE";
        };

        numword: numword {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "NUMWORD";
        };

        micro: micro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_0 &kp KP_NUMBER_1 &kp KP_NUMBER_8 &kp KP_NUMBER_1>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "MICRO";
        };

        commaspace: commaspace {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COMMA &kp SPACE>;
            label = "COMMASPACE";
        };
    };

    behaviors {
        flatten: flatten {
            compatible = "zmk,behavior-tap-dance";
            label = "Return to base on tap-dance";
            #binding-cells = <0>;
            bindings = <&to 1>, <&to 0>;
        };

        mtl: mtl {
            compatible = "zmk,behavior-hold-tap";
            label = "Mod-Tap (left)";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <50 51 52 53 54 55 56 57 58 59 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 44 45 46 47 48 49 57 58 59>;
            hold-trigger-on-release;
        };

        mtr: mtr {
            compatible = "zmk,behavior-hold-tap";
            label = "Mod-Tap (Right)";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41 50 51 52 53 52 53 54 55 56 57 58 59>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Base";

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp ESC           &kp N1       &kp N2       &kp N3    &kp N4    &kp N5                          &kp N6     &kp N7         &kp N8    &kp N9    &kp N0  &kp EQUAL
&kp TAB           &kp SQT      &kp COMMA    &kp DOT   &kp P     &kp Y                           &kp F      &kp G          &kp C     &kp R     &kp L   &kp FSLH
&sk LEFT_SHIFT    &mtl LWIN A  &mtl LALT O  &kp E     &kp U     &kp I                           &kp D      &kp H          &kp T     &kp N     &kp S   &kp MINUS
&sk LEFT_CONTROL  &kp SEMI     &kp Q        &kp J     &kp K     &kp X      &kp C_MUTE    &none  &kp B      &kp M          &kp W     &kp V     &kp Z   &kp BSLH
                               &kp LGUI     &flatten  &sk LALT  &kp SPACE  &mo 2         &mo 1  &kp ENTER  &kp BACKSPACE  &kp RALT  &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        num_layer {
            label = "Num";

            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&numword ESCAPE  &kp LS(LEFT_PARENTHESIS)  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &numword LS(RIGHT_PARENTHESIS)                    &trans    &trans    &trans         &trans        &trans     &trans
&numword TAB     &kp LEFT_BRACKET          &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp RIGHT_BRACKET                                 &none     &none     &none          &none         &none      &none
&trans           &kp GRAVE                 &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp EQUAL                                         &kp CAPS  &kp LEFT  &kp DOWN       &kp UP_ARROW  &kp RIGHT  &none
&trans           &kp SLASH                 &kp KP_MINUS     &kp KP_NUMBER_0  &kp KP_DOT       &kp BACKSLASH                   &trans    &trans  &kp INS   &kp HOME  &kp PAGE_DOWN  &kp PG_UP     &kp END    &none
                                           &flatten         &trans           &trans           &numword SPACE                  &trans    &trans  &trans    &trans    &trans         &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        nav_layer {
            label = "Nav";

            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
            // |       | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
            // |       | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
            // |       | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
            //                |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
&bt BT_CLR  &kp F12  &kp F7  &kp F8   &kp F9   &kp F15                    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2   &bt BT_SEL 3  &trans     &bt BT_CLR
&trans      &kp F11  &kp F4  &kp F5   &kp F6   &kp F14                    &kp LC(R)     &kp LC(V)     &kp LC(C)      &kp LC(X)     &kp LC(Z)  &none
&trans      &kp F10  &kp F1  &kp F2   &kp F3   &kp F13                    &kp CAPS      &kp LEFT      &kp DOWN       &kp UP_ARROW  &kp RIGHT  &none
&trans      &none    &kp F1  &kp F10  &kp F12  &none    &trans    &trans  &kp INS       &kp HOME      &kp PAGE_DOWN  &kp PG_UP     &kp END    &none
                     &trans  &trans   &trans   &trans   &trans    &trans  &trans        &trans        &trans         &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        sym_layer {
            // ----------------------------------------------------------------------------------------------------------------------------
            // | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |       |       |
            // | EXTPWR | RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
            // |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
            // |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
            //                    |         |         |         |         |         | |      |      |      |       |      |

            label = "symbols";
            bindings = <
&trans  &none          &kp LS(AMPS)  &kp LS(STAR)   &kp LS(LPAR)   &none                                   &none  &none   &degree        &none  &none  &plus_minus
&trans  &kp LS(LBRC)   &kp LS(DLLR)  &kp LS(PRCNT)  &kp LS(CARET)  &kp LS(RBRC)                            &none  &none   &kp C_AL_CALC  &none  &none  &none
&trans  &kp LS(UNDER)  &kp LS(EXCL)  &kp LS(AT)     &kp LS(POUND)  &kp LS(PLUS)                            &none  &none   &none          &none  &none  &none
&trans  &kp LS(QMARK)  &kp LS(AT)    &kp LS(RBRC)   &none          &kp LS(PIPE)  &rgb_ug RGB_TOG    &none  &none  &micro  &none          &none  &none  &none
                       &none         &none          &none          &none         &none              &none  &none  &none   &none          &none
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp PG_UP PG_DN>;
        };
    };
};
